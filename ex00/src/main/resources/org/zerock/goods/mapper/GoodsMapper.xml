<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.goods.mapper.GoodsMapper">

	<!-- 상품 리스트 -->
	<select id="list" resultType="org.zerock.goods.vo.GoodsVO">
		select goods_no,goods_name, price,discount,discount_rate,hit ,image_name ,saved_rate
		from (
			select rownum rnum, goods_no,goods_name, price,discount,discount_rate,hit,image_name,saved_rate
			from (
				select
					g.goods_no,g.goods_name, p.price,p.discount,p.discount_rate,g.hit,g.image_name,p.saved_rate
				from
					goods g, price p 
					where
					<!-- 일반 조건 -->
					(
						<!-- 현재 판매되고있는 물건 - 가격 정보가 현재 가격으로 존재한다. -->
						<![CDATA[ sale_startDate <= trunc(sysdate) and trunc(sysdate) <= sale_endDate]]>
						<!-- 검색을 달아야 한다. -->
					) 
						<!-- 조인 조건 -->
						and (g.goods_no = p.goods_no)
				order by goods_no desc
			   )
			)
		where rnum between #{startRow} and #{endRow}
	</select>

	<!-- 상품 리스트 페이지 처리를 위한 전체 데이터 개수 가져오기 -->
	<select id="getTotalRow" resultType="Long">
		select count(*)
		from goods
		where 1=1
		<!-- 검색을 달아야한다. -->
	</select>
	

	<!-- 상품 보기 조회수 1 증가 -->
	<!-- # {obj} 1. 변수의 이름, 2. vo의 getter 이름, 3. Map의 key -->
	<update id="increase">
		update goods set hit = hit + 1
		where no = #{no}
	</update>

	<!-- 상품 글보기 -->
	<select id="view" resultType="org.zerock.goods.vo.GoodsVO">
		select no, title, content, writer, writeDate, hit
		from goods
		where no = #{no}
	</select>

	<!-- 상품 등록 -->
	<!-- 
	<insert id="write">
		insert into goods(no, title, content, writer, pw)
		values(goods_seq.nextval, #{title}, #{content}, #{writer}, #{pw})
	</insert>
	-->
	<insert id="write">
		<!-- 먼저 GoodsVO의 no에 setter를 이용해서 시퀀스에서 받아온 번호를 세팅해 준다. -->
		<selectKey keyProperty="no" resultType="Long" order="BEFORE">
			select goods_seq.nextval from dual
		</selectKey>
		insert into goods(no, title, content, writer, pw)
		values(#{no}, #{title}, #{content}, #{writer}, #{pw})
	</insert>

	<!-- 트랜젝션 처리 테스트를 위한 쿼리 - 같은 no의 데이터를 등록 시도 -->
	<!-- 
	<insert id="writeTx">
		insert into goods(no, title, content, writer, pw)
		values(#{no}, #{title}, #{content}, #{writer}, #{pw})
	</insert>
	-->

	<!-- 상품 수정 -->
	<update id="update">
	<![CDATA[
		update goods
		set title = #{title}, content = #{content}, writer = #{writer}
		where no = ${no} and pw = #{pw}
	]]>
	</update>

	<!-- 상품 수정 -->
	<delete id="delete">
	<![CDATA[
		delete from goods
		where no = ${no} and pw = #{pw}
	]]>
	</delete>

</mapper>